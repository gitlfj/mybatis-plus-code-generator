package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import com.cqysxx.ype.common.EnumConstants;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import com.github.pagehelper.PageInfo;
import com.cqysxx.ype.common.ResultModel;
import org.springframework.util.StringUtils;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.validation.Valid;
import java.util.List;
import java.util.Date;

/**
 * <p>
 *  ${table.entityPath}前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@RestController
@RequestMapping("/${table.entityPath}")
@Api(tags = "${table.entityPath}接口")
public class  ${table.controllerName} {

    private static final Logger LOGGER = LoggerFactory.getLogger(${table.controllerName}.class);

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;


    /**
    * 分页查询${entity}列表
    * @param  ${table.entityPath} 查询条件对象
    * @return com.cqysxx.ype.common.ResultModel
    * @date ${date}
    * @author lfj
    */
    @PostMapping("list${entity}")
    @ApiOperation(value = "分页查询列表")
    public ResultModel list${entity}(@RequestBody @Valid ${entity} ${table.entityPath}) {
        try {



            PageInfo<${entity}> list = null;
            return new ResultModel<>(null);
        } catch (Exception e) {
            return ResultModel.fail(EnumConstants.FAIL,  e.getMessage());
        }
    }


    /**
     * 查询详情
     *
     * @param id 查找对象的主键ID
     * @return com.cqysxx.ype.common.ResultModel
     * @date ${date}
     */
    @GetMapping("getDetail")
    @ApiOperation(value = "查询详情")
    public ResultModel getDetail(@RequestParam(value = "id") String id) {
        try {



            return new ResultModel<>(null);
        } catch (Exception e) {
            return ResultModel.fail(EnumConstants.FAIL,  e.getMessage());
        }
    }


    /**
     * 新增
     * @param ${table.entityPath} 保存的对象
     * @return com.cqysxx.ype.common.ResultModel
     * @date ${date}
     */
    @PostMapping("/save")
    @ApiOperation(value = "新增")
    public ResultModel save(@RequestBody @Valid ${entity} ${table.entityPath}) {
        try {



            return ResultModel.success();
        } catch (Exception e) {
            return ResultModel.fail(EnumConstants.FAIL,  e.getMessage());
        }

    }

    /**
     * 修改
     * @param ${table.entityPath} 修改的对象
     * @return com.cqysxx.ype.common.ResultModel
     * @date ${date}
     */
    @ApiOperation(value = "修改")
    @PostMapping("/update")
    public ResultModel update(@RequestBody @Valid ${entity} ${table.entityPath}) {
        try {
            String id = ${table.entityPath}.getId();
            if(StringUtils.isEmpty(id)) {
                return ResultModel.fail(EnumConstants.FAIL, "id不能为空");
            }


            return ResultModel.success();
        } catch (Exception e) {
            return ResultModel.fail(EnumConstants.FAIL,  e.getMessage());
        }
    }


    /**
     * 删除/批量删除
     * @param ids String 类型 List 集合
     * @return com.cqysxx.ype.common.ResultModel
     * @date ${date}
     */
    @ApiOperation(value = "删除/批量删除")
    @PostMapping("remove")
    public ResultModel delete(@RequestParam(value = "ids") List<String> ids) {
        try {



            return ResultModel.success();
        } catch (Exception e) {
            return ResultModel.fail(EnumConstants.FAIL,  e.getMessage());
        }
    }

}
